grammar org.eclipse.sirius.expression.dsl.ExpressionDSL hidden(WS)

generate expressionDSL "http://www.eclipse.org/sirius/expression/dsl/ExpressionDSL"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

SiriusExpressionPackage:
	'package' ePackage=[ecore::EPackage|FQN] '{'
		(expressionClasses+=SiriusExpressionClass)*
	'}'
;
	
SiriusExpressionClass:
	'class' eClass=[ecore::EClass|FQN] '{'
		(variables+=SiriusVariable)*
		(expressionDescriptions+=SiriusExpressionDescription)*
	'}'
;

SiriusVariable:
	(documentation=ML_COMMENT)?
	'var' name=ID ':' eType=[ecore::EClassifier|FQN]
;

FQN returns ecore::EString:
	ID ("." ID)*
;

SiriusExpressionDescription:
	'exp' expression=[ecore::EAttribute|FQN] '(' (parameters+=Parameter(',' parameters+=Parameter)*)? ')' ':' type=[ecore::EClassifier|FQN] '[' lowerBound=Bound '..' upperBound=Bound  ']' '{'
		'contextableElements' '=' '[' 
			(contextableElements+=[ecore::EClass|FQN](',' contextableElements+=[ecore::EClass|FQN])*)?
		']'
	'}'
;

Parameter:
	(optional?='optional')? variable=[SiriusVariable|FQN]
;

Bound returns ecore::EInt:
	('-')?INT
;

terminal ID : '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
terminal INT returns ecore::EInt: ('0'..'9')+;
terminal ML_COMMENT : '/*' -> '*/';
terminal WS : (' '|'\t'|'\r'|'\n')+;
