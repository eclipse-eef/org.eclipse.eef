/*
 * generated by Xtext
 */
grammar InternalExpressionDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.sirius.expression.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.sirius.expression.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.sirius.expression.dsl.services.ExpressionDSLGrammarAccess;

}

@parser::members {

 	private ExpressionDSLGrammarAccess grammarAccess;
 	
    public InternalExpressionDSLParser(TokenStream input, ExpressionDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "SiriusExpressionPackage";	
   	}
   	
   	@Override
   	protected ExpressionDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSiriusExpressionPackage
entryRuleSiriusExpressionPackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSiriusExpressionPackageRule()); }
	 iv_ruleSiriusExpressionPackage=ruleSiriusExpressionPackage 
	 { $current=$iv_ruleSiriusExpressionPackage.current; } 
	 EOF 
;

// Rule SiriusExpressionPackage
ruleSiriusExpressionPackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSiriusExpressionPackageAccess().getPackageKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiriusExpressionPackageRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionPackageAccess().getEPackageEPackageCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSiriusExpressionPackageAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionPackageAccess().getExpressionClassesSiriusExpressionClassParserRuleCall_3_0()); 
	    }
		lv_expressionClasses_3_0=ruleSiriusExpressionClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiriusExpressionPackageRule());
	        }
       		add(
       			$current, 
       			"expressionClasses",
        		lv_expressionClasses_3_0, 
        		"org.eclipse.sirius.expression.dsl.ExpressionDSL.SiriusExpressionClass");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSiriusExpressionPackageAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSiriusExpressionClass
entryRuleSiriusExpressionClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSiriusExpressionClassRule()); }
	 iv_ruleSiriusExpressionClass=ruleSiriusExpressionClass 
	 { $current=$iv_ruleSiriusExpressionClass.current; } 
	 EOF 
;

// Rule SiriusExpressionClass
ruleSiriusExpressionClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSiriusExpressionClassAccess().getClassKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiriusExpressionClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionClassAccess().getEClassEClassCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSiriusExpressionClassAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionClassAccess().getVariablesSiriusVariableParserRuleCall_3_0()); 
	    }
		lv_variables_3_0=ruleSiriusVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiriusExpressionClassRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_3_0, 
        		"org.eclipse.sirius.expression.dsl.ExpressionDSL.SiriusVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionClassAccess().getExpressionDescriptionsSiriusExpressionDescriptionParserRuleCall_4_0()); 
	    }
		lv_expressionDescriptions_4_0=ruleSiriusExpressionDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiriusExpressionClassRule());
	        }
       		add(
       			$current, 
       			"expressionDescriptions",
        		lv_expressionDescriptions_4_0, 
        		"org.eclipse.sirius.expression.dsl.ExpressionDSL.SiriusExpressionDescription");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSiriusExpressionClassAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSiriusVariable
entryRuleSiriusVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSiriusVariableRule()); }
	 iv_ruleSiriusVariable=ruleSiriusVariable 
	 { $current=$iv_ruleSiriusVariable.current; } 
	 EOF 
;

// Rule SiriusVariable
ruleSiriusVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_documentation_0_0=RULE_ML_COMMENT
		{
			newLeafNode(lv_documentation_0_0, grammarAccess.getSiriusVariableAccess().getDocumentationML_COMMENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiriusVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_0_0, 
        		"org.eclipse.sirius.expression.dsl.ExpressionDSL.ML_COMMENT");
	    }

)
)?	otherlv_1='var' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSiriusVariableAccess().getVarKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSiriusVariableAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiriusVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.sirius.expression.dsl.ExpressionDSL.ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSiriusVariableAccess().getColonKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiriusVariableRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSiriusVariableAccess().getETypeEClassifierCrossReference_4_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQNRule()); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleSiriusExpressionDescription
entryRuleSiriusExpressionDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSiriusExpressionDescriptionRule()); }
	 iv_ruleSiriusExpressionDescription=ruleSiriusExpressionDescription 
	 { $current=$iv_ruleSiriusExpressionDescription.current; } 
	 EOF 
;

// Rule SiriusExpressionDescription
ruleSiriusExpressionDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='exp' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSiriusExpressionDescriptionAccess().getExpKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiriusExpressionDescriptionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionDescriptionAccess().getExpressionEAttributeCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSiriusExpressionDescriptionAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionDescriptionAccess().getParametersParameterParserRuleCall_3_0_0()); 
	    }
		lv_parameters_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiriusExpressionDescriptionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"org.eclipse.sirius.expression.dsl.ExpressionDSL.Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSiriusExpressionDescriptionAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionDescriptionAccess().getParametersParameterParserRuleCall_3_1_1_0()); 
	    }
		lv_parameters_5_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiriusExpressionDescriptionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"org.eclipse.sirius.expression.dsl.ExpressionDSL.Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSiriusExpressionDescriptionAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSiriusExpressionDescriptionAccess().getColonKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiriusExpressionDescriptionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionDescriptionAccess().getTypeEClassifierCrossReference_6_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='[' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSiriusExpressionDescriptionAccess().getLeftSquareBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionDescriptionAccess().getLowerBoundBoundParserRuleCall_8_0()); 
	    }
		lv_lowerBound_10_0=ruleBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiriusExpressionDescriptionRule());
	        }
       		set(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_10_0, 
        		"org.eclipse.sirius.expression.dsl.ExpressionDSL.Bound");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='..' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSiriusExpressionDescriptionAccess().getFullStopFullStopKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionDescriptionAccess().getUpperBoundBoundParserRuleCall_10_0()); 
	    }
		lv_upperBound_12_0=ruleBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiriusExpressionDescriptionRule());
	        }
       		set(
       			$current, 
       			"upperBound",
        		lv_upperBound_12_0, 
        		"org.eclipse.sirius.expression.dsl.ExpressionDSL.Bound");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSiriusExpressionDescriptionAccess().getRightSquareBracketKeyword_11());
    }
	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSiriusExpressionDescriptionAccess().getLeftCurlyBracketKeyword_12());
    }
	otherlv_15='contextableElements' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSiriusExpressionDescriptionAccess().getContextableElementsKeyword_13());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSiriusExpressionDescriptionAccess().getEqualsSignKeyword_14());
    }
	otherlv_17='[' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSiriusExpressionDescriptionAccess().getLeftSquareBracketKeyword_15());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiriusExpressionDescriptionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionDescriptionAccess().getContextableElementsEClassCrossReference_16_0_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSiriusExpressionDescriptionAccess().getCommaKeyword_16_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiriusExpressionDescriptionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSiriusExpressionDescriptionAccess().getContextableElementsEClassCrossReference_16_1_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_21=']' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSiriusExpressionDescriptionAccess().getRightSquareBracketKeyword_17());
    }
	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getSiriusExpressionDescriptionAccess().getRightCurlyBracketKeyword_18());
    }
)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_optional_0_0=	'optional' 
    {
        newLeafNode(lv_optional_0_0, grammarAccess.getParameterAccess().getOptionalOptionalKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getVariableSiriusVariableCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBound
entryRuleBound returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoundRule()); } 
	 iv_ruleBound=ruleBound 
	 { $current=$iv_ruleBound.current.getText(); }  
	 EOF 
;

// Rule Bound
ruleBound returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBoundAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getBoundAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;


