/*
* generated by Xtext
*/
grammar InternalModelingBot;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.emf.eef.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.emf.eef.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.emf.eef.services.ModelingBotGrammarAccess;

}

@parser::members {
 
 	private ModelingBotGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ModelingBotGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleScenario
entryRuleScenario 
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScenarioAccess().getGroup()); }
(rule__Scenario__Group__0)
{ after(grammarAccess.getScenarioAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcessings
entryRuleProcessings 
:
{ before(grammarAccess.getProcessingsRule()); }
	 ruleProcessings
{ after(grammarAccess.getProcessingsRule()); } 
	 EOF 
;

// Rule Processings
ruleProcessings
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcessingsAccess().getAlternatives()); }
(rule__Processings__Alternatives)
{ after(grammarAccess.getProcessingsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertiesView
entryRulePropertiesView 
:
{ before(grammarAccess.getPropertiesViewRule()); }
	 rulePropertiesView
{ after(grammarAccess.getPropertiesViewRule()); } 
	 EOF 
;

// Rule PropertiesView
rulePropertiesView
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertiesViewAccess().getGroup()); }
(rule__PropertiesView__Group__0)
{ after(grammarAccess.getPropertiesViewAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWizard
entryRuleWizard 
:
{ before(grammarAccess.getWizardRule()); }
	 ruleWizard
{ after(grammarAccess.getWizardRule()); } 
	 EOF 
;

// Rule Wizard
ruleWizard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWizardAccess().getGroup()); }
(rule__Wizard__Group__0)
{ after(grammarAccess.getWizardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDetails
entryRuleDetails 
:
{ before(grammarAccess.getDetailsRule()); }
	 ruleDetails
{ after(grammarAccess.getDetailsRule()); } 
	 EOF 
;

// Rule Details
ruleDetails
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDetailsAccess().getGroup()); }
(rule__Details__Group__0)
{ after(grammarAccess.getDetailsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubProcessings
entryRuleSubProcessings 
:
{ before(grammarAccess.getSubProcessingsRule()); }
	 ruleSubProcessings
{ after(grammarAccess.getSubProcessingsRule()); } 
	 EOF 
;

// Rule SubProcessings
ruleSubProcessings
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubProcessingsAccess().getAlternatives()); }
(rule__SubProcessings__Alternatives)
{ after(grammarAccess.getSubProcessingsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getAlternatives()); }
(rule__Action__Alternatives)
{ after(grammarAccess.getActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEclipseAction
entryRuleEclipseAction 
:
{ before(grammarAccess.getEclipseActionRule()); }
	 ruleEclipseAction
{ after(grammarAccess.getEclipseActionRule()); } 
	 EOF 
;

// Rule EclipseAction
ruleEclipseAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEclipseActionAccess().getAlternatives()); }
(rule__EclipseAction__Alternatives)
{ after(grammarAccess.getEclipseActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCreateProject
entryRuleCreateProject 
:
{ before(grammarAccess.getCreateProjectRule()); }
	 ruleCreateProject
{ after(grammarAccess.getCreateProjectRule()); } 
	 EOF 
;

// Rule CreateProject
ruleCreateProject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCreateProjectAccess().getGroup()); }
(rule__CreateProject__Group__0)
{ after(grammarAccess.getCreateProjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRemoveProject
entryRuleRemoveProject 
:
{ before(grammarAccess.getRemoveProjectRule()); }
	 ruleRemoveProject
{ after(grammarAccess.getRemoveProjectRule()); } 
	 EOF 
;

// Rule RemoveProject
ruleRemoveProject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRemoveProjectAccess().getGroup()); }
(rule__RemoveProject__Group__0)
{ after(grammarAccess.getRemoveProjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCreateModel
entryRuleCreateModel 
:
{ before(grammarAccess.getCreateModelRule()); }
	 ruleCreateModel
{ after(grammarAccess.getCreateModelRule()); } 
	 EOF 
;

// Rule CreateModel
ruleCreateModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCreateModelAccess().getGroup()); }
(rule__CreateModel__Group__0)
{ after(grammarAccess.getCreateModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSave
entryRuleSave 
:
{ before(grammarAccess.getSaveRule()); }
	 ruleSave
{ after(grammarAccess.getSaveRule()); } 
	 EOF 
;

// Rule Save
ruleSave
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSaveAccess().getGroup()); }
(rule__Save__Group__0)
{ after(grammarAccess.getSaveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEEFAction
entryRuleEEFAction 
:
{ before(grammarAccess.getEEFActionRule()); }
	 ruleEEFAction
{ after(grammarAccess.getEEFActionRule()); } 
	 EOF 
;

// Rule EEFAction
ruleEEFAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEEFActionAccess().getAlternatives()); }
(rule__EEFAction__Alternatives)
{ after(grammarAccess.getEEFActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCheck
entryRuleCheck 
:
{ before(grammarAccess.getCheckRule()); }
	 ruleCheck
{ after(grammarAccess.getCheckRule()); } 
	 EOF 
;

// Rule Check
ruleCheck
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCheckAccess().getGroup()); }
(rule__Check__Group__0)
{ after(grammarAccess.getCheckAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdd
entryRuleAdd 
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddAccess().getGroup()); }
(rule__Add__Group__0)
{ after(grammarAccess.getAddAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetAttribute
entryRuleSetAttribute 
:
{ before(grammarAccess.getSetAttributeRule()); }
	 ruleSetAttribute
{ after(grammarAccess.getSetAttributeRule()); } 
	 EOF 
;

// Rule SetAttribute
ruleSetAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetAttributeAccess().getGroup()); }
(rule__SetAttribute__Group__0)
{ after(grammarAccess.getSetAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Processings__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessingsAccess().getDetailsParserRuleCall_0()); }
	ruleDetails
{ after(grammarAccess.getProcessingsAccess().getDetailsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getProcessingsAccess().getWizardParserRuleCall_1()); }
	ruleWizard
{ after(grammarAccess.getProcessingsAccess().getWizardParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getProcessingsAccess().getPropertiesViewParserRuleCall_2()); }
	rulePropertiesView
{ after(grammarAccess.getProcessingsAccess().getPropertiesViewParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getProcessingsAccess().getActionParserRuleCall_3()); }
	ruleAction
{ after(grammarAccess.getProcessingsAccess().getActionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubProcessings__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubProcessingsAccess().getWizardParserRuleCall_0()); }
	ruleWizard
{ after(grammarAccess.getSubProcessingsAccess().getWizardParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSubProcessingsAccess().getDetailsParserRuleCall_1()); }
	ruleDetails
{ after(grammarAccess.getSubProcessingsAccess().getDetailsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSubProcessingsAccess().getPropertiesViewParserRuleCall_2()); }
	rulePropertiesView
{ after(grammarAccess.getSubProcessingsAccess().getPropertiesViewParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSubProcessingsAccess().getActionParserRuleCall_3()); }
	ruleAction
{ after(grammarAccess.getSubProcessingsAccess().getActionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getEclipseActionParserRuleCall_0()); }
	ruleEclipseAction
{ after(grammarAccess.getActionAccess().getEclipseActionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getEEFActionParserRuleCall_1()); }
	ruleEEFAction
{ after(grammarAccess.getActionAccess().getEEFActionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EclipseAction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEclipseActionAccess().getCreateProjectParserRuleCall_0()); }
	ruleCreateProject
{ after(grammarAccess.getEclipseActionAccess().getCreateProjectParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEclipseActionAccess().getCreateModelParserRuleCall_1()); }
	ruleCreateModel
{ after(grammarAccess.getEclipseActionAccess().getCreateModelParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEclipseActionAccess().getSaveParserRuleCall_2()); }
	ruleSave
{ after(grammarAccess.getEclipseActionAccess().getSaveParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getEclipseActionAccess().getRemoveProjectParserRuleCall_3()); }
	ruleRemoveProject
{ after(grammarAccess.getEclipseActionAccess().getRemoveProjectParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EEFAction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEEFActionAccess().getCheckParserRuleCall_0()); }
	ruleCheck
{ after(grammarAccess.getEEFActionAccess().getCheckParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEEFActionAccess().getAddParserRuleCall_1()); }
	ruleAdd
{ after(grammarAccess.getEEFActionAccess().getAddParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEEFActionAccess().getSetAttributeParserRuleCall_2()); }
	ruleSetAttribute
{ after(grammarAccess.getEEFActionAccess().getSetAttributeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Scenario__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__0__Impl
	rule__Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }

	'scenario' 

{ after(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__1__Impl
	rule__Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getNameAssignment_1()); }
(rule__Scenario__NameAssignment_1)
{ after(grammarAccess.getScenarioAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__2__Impl
	rule__Scenario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__3__Impl
	rule__Scenario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getProcessingsAssignment_3()); }
(rule__Scenario__ProcessingsAssignment_3)*
{ after(grammarAccess.getScenarioAccess().getProcessingsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PropertiesView__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertiesView__Group__0__Impl
	rule__PropertiesView__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getPropertiesViewKeyword_0()); }

	'propertiesView' 

{ after(grammarAccess.getPropertiesViewAccess().getPropertiesViewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertiesView__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertiesView__Group__1__Impl
	rule__PropertiesView__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getNameAssignment_1()); }
(rule__PropertiesView__NameAssignment_1)?
{ after(grammarAccess.getPropertiesViewAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertiesView__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertiesView__Group__2__Impl
	rule__PropertiesView__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPropertiesViewAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertiesView__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertiesView__Group__3__Impl
	rule__PropertiesView__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getProcessingsAssignment_3()); }
(rule__PropertiesView__ProcessingsAssignment_3)*
{ after(grammarAccess.getPropertiesViewAccess().getProcessingsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertiesView__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertiesView__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPropertiesViewAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Wizard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wizard__Group__0__Impl
	rule__Wizard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getWizardKeyword_0()); }

	'wizard' 

{ after(grammarAccess.getWizardAccess().getWizardKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wizard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wizard__Group__1__Impl
	rule__Wizard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getNameAssignment_1()); }
(rule__Wizard__NameAssignment_1)?
{ after(grammarAccess.getWizardAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wizard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wizard__Group__2__Impl
	rule__Wizard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getWizardAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wizard__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wizard__Group__3__Impl
	rule__Wizard__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getProcessingsAssignment_3()); }
(rule__Wizard__ProcessingsAssignment_3)*
{ after(grammarAccess.getWizardAccess().getProcessingsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wizard__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wizard__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getWizardAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Details__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Details__Group__0__Impl
	rule__Details__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Details__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getDetailsPageKeyword_0()); }

	'detailsPage' 

{ after(grammarAccess.getDetailsAccess().getDetailsPageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Details__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Details__Group__1__Impl
	rule__Details__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Details__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getNameAssignment_1()); }
(rule__Details__NameAssignment_1)?
{ after(grammarAccess.getDetailsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Details__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Details__Group__2__Impl
	rule__Details__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Details__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getDetailsAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Details__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Details__Group__3__Impl
	rule__Details__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Details__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getProcessingsAssignment_3()); }
(rule__Details__ProcessingsAssignment_3)*
{ after(grammarAccess.getDetailsAccess().getProcessingsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Details__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Details__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Details__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getDetailsAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CreateProject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateProject__Group__0__Impl
	rule__CreateProject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateProject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateProjectAccess().getCreateKeyword_0()); }

	'create' 

{ after(grammarAccess.getCreateProjectAccess().getCreateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateProject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateProject__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateProject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateProjectAccess().getProjectNameAssignment_1()); }
(rule__CreateProject__ProjectNameAssignment_1)
{ after(grammarAccess.getCreateProjectAccess().getProjectNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RemoveProject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoveProject__Group__0__Impl
	rule__RemoveProject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveProject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveProjectAccess().getDeleteKeyword_0()); }

	'delete' 

{ after(grammarAccess.getRemoveProjectAccess().getDeleteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveProject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoveProject__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveProject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveProjectAccess().getProjectNameAssignment_1()); }
(rule__RemoveProject__ProjectNameAssignment_1)
{ after(grammarAccess.getRemoveProjectAccess().getProjectNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CreateModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateModel__Group__0__Impl
	rule__CreateModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getCreateKeyword_0()); }

	'create' 

{ after(grammarAccess.getCreateModelAccess().getCreateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateModel__Group__1__Impl
	rule__CreateModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getModelNameAssignment_1()); }
(rule__CreateModel__ModelNameAssignment_1)
{ after(grammarAccess.getCreateModelAccess().getModelNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateModel__Group__2__Impl
	rule__CreateModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getInKeyword_2()); }

	'in' 

{ after(grammarAccess.getCreateModelAccess().getInKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateModel__Group__3__Impl
	rule__CreateModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getPathAssignment_3()); }
(rule__CreateModel__PathAssignment_3)
{ after(grammarAccess.getCreateModelAccess().getPathAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateModel__Group__4__Impl
	rule__CreateModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getRootKeyword_4()); }

	'root' 

{ after(grammarAccess.getCreateModelAccess().getRootKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateModel__Group__5__Impl
	rule__CreateModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getRootURIAssignment_5()); }
(rule__CreateModel__RootURIAssignment_5)
{ after(grammarAccess.getCreateModelAccess().getRootURIAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateModel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateModel__Group__6__Impl
	rule__CreateModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getAsKeyword_6()); }

	'as' 

{ after(grammarAccess.getCreateModelAccess().getAsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateModel__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateModel__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getReferenceNameAssignment_7()); }
(rule__CreateModel__ReferenceNameAssignment_7)
{ after(grammarAccess.getCreateModelAccess().getReferenceNameAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Save__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Save__Group__0__Impl
	rule__Save__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSaveAccess().getSaveKeyword_0()); }

	'save' 

{ after(grammarAccess.getSaveAccess().getSaveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Save__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Save__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSaveAccess().getSaveAction_1()); }
(

)
{ after(grammarAccess.getSaveAccess().getSaveAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Check__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check__Group__0__Impl
	rule__Check__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getCheckKeyword_0()); }

	'check' 

{ after(grammarAccess.getCheckAccess().getCheckKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getCheckAction_1()); }
(

)
{ after(grammarAccess.getCheckAccess().getCheckAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Add__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getAddAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group__1__Impl
	rule__Add__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getTypeURIAssignment_1()); }
(rule__Add__TypeURIAssignment_1)
{ after(grammarAccess.getAddAccess().getTypeURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group__2__Impl
	rule__Add__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getInKeyword_2()); }

	'in' 

{ after(grammarAccess.getAddAccess().getInKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group__3__Impl
	rule__Add__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getReferenceableObjectAssignment_3()); }
(rule__Add__ReferenceableObjectAssignment_3)
{ after(grammarAccess.getAddAccess().getReferenceableObjectAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group__4__Impl
	rule__Add__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getFeatureKeyword_4()); }

	'feature' 

{ after(grammarAccess.getAddAccess().getFeatureKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group__5__Impl
	rule__Add__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getEContainingFeatureURIAssignment_5()); }
(rule__Add__EContainingFeatureURIAssignment_5)
{ after(grammarAccess.getAddAccess().getEContainingFeatureURIAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group__6__Impl
	rule__Add__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getAsKeyword_6()); }

	'as' 

{ after(grammarAccess.getAddAccess().getAsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getReferenceNameAssignment_7()); }
(rule__Add__ReferenceNameAssignment_7)
{ after(grammarAccess.getAddAccess().getReferenceNameAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SetAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group__0__Impl
	rule__SetAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getSetAttributeAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group__1__Impl
	rule__SetAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getReferenceableObjectAssignment_1()); }
(rule__SetAttribute__ReferenceableObjectAssignment_1)
{ after(grammarAccess.getSetAttributeAccess().getReferenceableObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group__2__Impl
	rule__SetAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getFeatureKeyword_2()); }

	'feature' 

{ after(grammarAccess.getSetAttributeAccess().getFeatureKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group__3__Impl
	rule__SetAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getEContainingFeatureURIAssignment_3()); }
(rule__SetAttribute__EContainingFeatureURIAssignment_3)
{ after(grammarAccess.getSetAttributeAccess().getEContainingFeatureURIAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group__4__Impl
	rule__SetAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getGroup_4()); }
(rule__SetAttribute__Group_4__0)?
{ after(grammarAccess.getSetAttributeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group__5__Impl
	rule__SetAttribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getValuesKeyword_5()); }

	'values' 

{ after(grammarAccess.getSetAttributeAccess().getValuesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetAttribute__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group__6__Impl
	rule__SetAttribute__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getValuesAssignment_6()); }
(rule__SetAttribute__ValuesAssignment_6)
{ after(grammarAccess.getSetAttributeAccess().getValuesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetAttribute__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getGroup_7()); }
(rule__SetAttribute__Group_7__0)*
{ after(grammarAccess.getSetAttributeAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SetAttribute__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group_4__0__Impl
	rule__SetAttribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getViaKeyword_4_0()); }

	'via' 

{ after(grammarAccess.getSetAttributeAccess().getViaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetAttribute__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getPropertiesEditionElementURIAssignment_4_1()); }
(rule__SetAttribute__PropertiesEditionElementURIAssignment_4_1)
{ after(grammarAccess.getSetAttributeAccess().getPropertiesEditionElementURIAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SetAttribute__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group_7__0__Impl
	rule__SetAttribute__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getSetAttributeAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetAttribute__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetAttribute__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getValuesAssignment_7_1()); }
(rule__SetAttribute__ValuesAssignment_7_1)
{ after(grammarAccess.getSetAttributeAccess().getValuesAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Scenario__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getScenarioAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ProcessingsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getProcessingsProcessingsParserRuleCall_3_0()); }
	ruleProcessings{ after(grammarAccess.getScenarioAccess().getProcessingsProcessingsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getPropertiesViewAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__ProcessingsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
	ruleSubProcessings{ after(grammarAccess.getPropertiesViewAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getWizardAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__ProcessingsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
	ruleSubProcessings{ after(grammarAccess.getWizardAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Details__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getDetailsAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Details__ProcessingsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
	ruleSubProcessings{ after(grammarAccess.getDetailsAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreateProject__ProjectNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateProjectAccess().getProjectNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getCreateProjectAccess().getProjectNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveProject__ProjectNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveProjectAccess().getProjectNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getRemoveProjectAccess().getProjectNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__ModelNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getModelNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getCreateModelAccess().getModelNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__PathAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getPathEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getCreateModelAccess().getPathEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__RootURIAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getRootURIEStringParserRuleCall_5_0()); }
	ruleEString{ after(grammarAccess.getCreateModelAccess().getRootURIEStringParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreateModel__ReferenceNameAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateModelAccess().getReferenceNameIDTerminalRuleCall_7_0()); }
	RULE_ID{ after(grammarAccess.getCreateModelAccess().getReferenceNameIDTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Add__TypeURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getTypeURIEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getAddAccess().getTypeURIEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Add__ReferenceableObjectAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getReferenceableObjectReferenceableObjectCrossReference_3_0()); }
(
{ before(grammarAccess.getAddAccess().getReferenceableObjectReferenceableObjectIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getAddAccess().getReferenceableObjectReferenceableObjectIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getAddAccess().getReferenceableObjectReferenceableObjectCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Add__EContainingFeatureURIAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getEContainingFeatureURIEStringParserRuleCall_5_0()); }
	ruleEString{ after(grammarAccess.getAddAccess().getEContainingFeatureURIEStringParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Add__ReferenceNameAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getReferenceNameIDTerminalRuleCall_7_0()); }
	RULE_ID{ after(grammarAccess.getAddAccess().getReferenceNameIDTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__ReferenceableObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getReferenceableObjectReferenceableObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getSetAttributeAccess().getReferenceableObjectReferenceableObjectIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSetAttributeAccess().getReferenceableObjectReferenceableObjectIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSetAttributeAccess().getReferenceableObjectReferenceableObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__EContainingFeatureURIAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getEContainingFeatureURIEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getSetAttributeAccess().getEContainingFeatureURIEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__PropertiesEditionElementURIAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getPropertiesEditionElementURIEStringParserRuleCall_4_1_0()); }
	ruleEString{ after(grammarAccess.getSetAttributeAccess().getPropertiesEditionElementURIEStringParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__ValuesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getValuesEStringParserRuleCall_6_0()); }
	ruleEString{ after(grammarAccess.getSetAttributeAccess().getValuesEStringParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetAttribute__ValuesAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAttributeAccess().getValuesEStringParserRuleCall_7_1_0()); }
	ruleEString{ after(grammarAccess.getSetAttributeAccess().getValuesEStringParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


