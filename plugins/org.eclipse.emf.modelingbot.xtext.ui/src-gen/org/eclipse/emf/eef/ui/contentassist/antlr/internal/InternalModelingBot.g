/*
* generated by Xtext
*/
grammar InternalModelingBot;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.emf.eef.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.emf.eef.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.emf.eef.services.ModelingBotGrammarAccess;

}

@parser::members {
 
 	private ModelingBotGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ModelingBotGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleScenario
entryRuleScenario 
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScenarioAccess().getGroup()); }
(rule__Scenario__Group__0)
{ after(grammarAccess.getScenarioAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEEFProcessings
entryRuleEEFProcessings 
:
{ before(grammarAccess.getEEFProcessingsRule()); }
	 ruleEEFProcessings
{ after(grammarAccess.getEEFProcessingsRule()); } 
	 EOF 
;

// Rule EEFProcessings
ruleEEFProcessings
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEEFProcessingsAccess().getAlternatives()); }
(rule__EEFProcessings__Alternatives)
{ after(grammarAccess.getEEFProcessingsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertiesView
entryRulePropertiesView 
:
{ before(grammarAccess.getPropertiesViewRule()); }
	 rulePropertiesView
{ after(grammarAccess.getPropertiesViewRule()); } 
	 EOF 
;

// Rule PropertiesView
rulePropertiesView
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertiesViewAccess().getGroup()); }
(rule__PropertiesView__Group__0)
{ after(grammarAccess.getPropertiesViewAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWizard
entryRuleWizard 
:
{ before(grammarAccess.getWizardRule()); }
	 ruleWizard
{ after(grammarAccess.getWizardRule()); } 
	 EOF 
;

// Rule Wizard
ruleWizard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWizardAccess().getGroup()); }
(rule__Wizard__Group__0)
{ after(grammarAccess.getWizardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDetails
entryRuleDetails 
:
{ before(grammarAccess.getDetailsRule()); }
	 ruleDetails
{ after(grammarAccess.getDetailsRule()); } 
	 EOF 
;

// Rule Details
ruleDetails
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDetailsAccess().getGroup()); }
(rule__Details__Group__0)
{ after(grammarAccess.getDetailsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubProcessings
entryRuleSubProcessings 
:
{ before(grammarAccess.getSubProcessingsRule()); }
	 ruleSubProcessings
{ after(grammarAccess.getSubProcessingsRule()); } 
	 EOF 
;

// Rule SubProcessings
ruleSubProcessings
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubProcessingsAccess().getWizardParserRuleCall()); }
	ruleWizard
{ after(grammarAccess.getSubProcessingsAccess().getWizardParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EEFProcessings__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEEFProcessingsAccess().getDetailsParserRuleCall_0()); }
	ruleDetails
{ after(grammarAccess.getEEFProcessingsAccess().getDetailsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEEFProcessingsAccess().getWizardParserRuleCall_1()); }
	ruleWizard
{ after(grammarAccess.getEEFProcessingsAccess().getWizardParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEEFProcessingsAccess().getPropertiesViewParserRuleCall_2()); }
	rulePropertiesView
{ after(grammarAccess.getEEFProcessingsAccess().getPropertiesViewParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Scenario__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__0__Impl
	rule__Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }

	'scenario' 

{ after(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__1__Impl
	rule__Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getNameAssignment_1()); }
(rule__Scenario__NameAssignment_1)
{ after(grammarAccess.getScenarioAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__2__Impl
	rule__Scenario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__3__Impl
	rule__Scenario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getProcessingsAssignment_3()); }
(rule__Scenario__ProcessingsAssignment_3)*
{ after(grammarAccess.getScenarioAccess().getProcessingsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PropertiesView__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertiesView__Group__0__Impl
	rule__PropertiesView__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getPropertiesViewKeyword_0()); }

	'propertiesView' 

{ after(grammarAccess.getPropertiesViewAccess().getPropertiesViewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertiesView__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertiesView__Group__1__Impl
	rule__PropertiesView__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getNameAssignment_1()); }
(rule__PropertiesView__NameAssignment_1)?
{ after(grammarAccess.getPropertiesViewAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertiesView__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertiesView__Group__2__Impl
	rule__PropertiesView__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPropertiesViewAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertiesView__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertiesView__Group__3__Impl
	rule__PropertiesView__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getProcessingsAssignment_3()); }
(rule__PropertiesView__ProcessingsAssignment_3)*
{ after(grammarAccess.getPropertiesViewAccess().getProcessingsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertiesView__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertiesView__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPropertiesViewAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Wizard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wizard__Group__0__Impl
	rule__Wizard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getWizardKeyword_0()); }

	'wizard' 

{ after(grammarAccess.getWizardAccess().getWizardKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wizard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wizard__Group__1__Impl
	rule__Wizard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getNameAssignment_1()); }
(rule__Wizard__NameAssignment_1)?
{ after(grammarAccess.getWizardAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wizard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wizard__Group__2__Impl
	rule__Wizard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getWizardAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wizard__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wizard__Group__3__Impl
	rule__Wizard__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getProcessingsAssignment_3()); }
(rule__Wizard__ProcessingsAssignment_3)*
{ after(grammarAccess.getWizardAccess().getProcessingsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wizard__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wizard__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getWizardAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Details__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Details__Group__0__Impl
	rule__Details__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Details__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getDetailsPageKeyword_0()); }

	'detailsPage' 

{ after(grammarAccess.getDetailsAccess().getDetailsPageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Details__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Details__Group__1__Impl
	rule__Details__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Details__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getNameAssignment_1()); }
(rule__Details__NameAssignment_1)?
{ after(grammarAccess.getDetailsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Details__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Details__Group__2__Impl
	rule__Details__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Details__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getDetailsAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Details__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Details__Group__3__Impl
	rule__Details__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Details__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getProcessingsAssignment_3()); }
(rule__Details__ProcessingsAssignment_3)*
{ after(grammarAccess.getDetailsAccess().getProcessingsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Details__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Details__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Details__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getDetailsAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Scenario__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getScenarioAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ProcessingsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getProcessingsEEFProcessingsParserRuleCall_3_0()); }
	ruleEEFProcessings{ after(grammarAccess.getScenarioAccess().getProcessingsEEFProcessingsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getPropertiesViewAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertiesView__ProcessingsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesViewAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
	ruleSubProcessings{ after(grammarAccess.getPropertiesViewAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getWizardAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wizard__ProcessingsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWizardAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
	ruleSubProcessings{ after(grammarAccess.getWizardAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Details__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getDetailsAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Details__ProcessingsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDetailsAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
	ruleSubProcessings{ after(grammarAccess.getDetailsAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


