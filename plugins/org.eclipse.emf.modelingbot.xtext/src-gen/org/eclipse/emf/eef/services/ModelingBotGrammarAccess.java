/*
* generated by Xtext
*/

package org.eclipse.emf.eef.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ModelingBotGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Scenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProcessingsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cProcessingsProcessingsParserRuleCall_3_0 = (RuleCall)cProcessingsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Scenario returns mbot::Scenario:
		//	"scenario" name=EString "{" processings+=Processings* "}";
		public ParserRule getRule() { return rule; }

		//"scenario" name=EString "{" processings+=Processings* "}"
		public Group getGroup() { return cGroup; }

		//"scenario"
		public Keyword getScenarioKeyword_0() { return cScenarioKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//processings+=Processings*
		public Assignment getProcessingsAssignment_3() { return cProcessingsAssignment_3; }

		//Processings
		public RuleCall getProcessingsProcessingsParserRuleCall_3_0() { return cProcessingsProcessingsParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ProcessingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Processings");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDetailsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWizardParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPropertiesViewParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cActionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Processings returns mbot::Processing:
		//	Details | Wizard | PropertiesView | Action;
		public ParserRule getRule() { return rule; }

		//Details | Wizard | PropertiesView | Action
		public Alternatives getAlternatives() { return cAlternatives; }

		//Details
		public RuleCall getDetailsParserRuleCall_0() { return cDetailsParserRuleCall_0; }

		//Wizard
		public RuleCall getWizardParserRuleCall_1() { return cWizardParserRuleCall_1; }

		//PropertiesView
		public RuleCall getPropertiesViewParserRuleCall_2() { return cPropertiesViewParserRuleCall_2; }

		//Action
		public RuleCall getActionParserRuleCall_3() { return cActionParserRuleCall_3; }
	}

	public class PropertiesViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropertiesView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPropertiesViewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProcessingsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cProcessingsSubProcessingsParserRuleCall_3_0 = (RuleCall)cProcessingsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PropertiesView returns mbot::PropertiesView:
		//	"propertiesView" name=EString? "{" processings+=SubProcessings* "}";
		public ParserRule getRule() { return rule; }

		//"propertiesView" name=EString? "{" processings+=SubProcessings* "}"
		public Group getGroup() { return cGroup; }

		//"propertiesView"
		public Keyword getPropertiesViewKeyword_0() { return cPropertiesViewKeyword_0; }

		//name=EString?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//processings+=SubProcessings*
		public Assignment getProcessingsAssignment_3() { return cProcessingsAssignment_3; }

		//SubProcessings
		public RuleCall getProcessingsSubProcessingsParserRuleCall_3_0() { return cProcessingsSubProcessingsParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class WizardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Wizard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWizardKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProcessingsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cProcessingsSubProcessingsParserRuleCall_3_0 = (RuleCall)cProcessingsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Wizard returns mbot::Wizard:
		//	"wizard" name=EString? "{" processings+=SubProcessings* "}";
		public ParserRule getRule() { return rule; }

		//"wizard" name=EString? "{" processings+=SubProcessings* "}"
		public Group getGroup() { return cGroup; }

		//"wizard"
		public Keyword getWizardKeyword_0() { return cWizardKeyword_0; }

		//name=EString?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//processings+=SubProcessings*
		public Assignment getProcessingsAssignment_3() { return cProcessingsAssignment_3; }

		//SubProcessings
		public RuleCall getProcessingsSubProcessingsParserRuleCall_3_0() { return cProcessingsSubProcessingsParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class DetailsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Details");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDetailsPageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProcessingsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cProcessingsSubProcessingsParserRuleCall_3_0 = (RuleCall)cProcessingsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Details returns mbot::DetailsPage:
		//	"detailsPage" name=EString? "{" processings+=SubProcessings* "}";
		public ParserRule getRule() { return rule; }

		//"detailsPage" name=EString? "{" processings+=SubProcessings* "}"
		public Group getGroup() { return cGroup; }

		//"detailsPage"
		public Keyword getDetailsPageKeyword_0() { return cDetailsPageKeyword_0; }

		//name=EString?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//processings+=SubProcessings*
		public Assignment getProcessingsAssignment_3() { return cProcessingsAssignment_3; }

		//SubProcessings
		public RuleCall getProcessingsSubProcessingsParserRuleCall_3_0() { return cProcessingsSubProcessingsParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class SubProcessingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubProcessings");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cWizardParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDetailsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPropertiesViewParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cActionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//SubProcessings returns mbot::Processing:
		//	Wizard | Details | PropertiesView | Action;
		public ParserRule getRule() { return rule; }

		//Wizard | Details | PropertiesView | Action
		public Alternatives getAlternatives() { return cAlternatives; }

		//Wizard
		public RuleCall getWizardParserRuleCall_0() { return cWizardParserRuleCall_0; }

		//Details
		public RuleCall getDetailsParserRuleCall_1() { return cDetailsParserRuleCall_1; }

		//PropertiesView
		public RuleCall getPropertiesViewParserRuleCall_2() { return cPropertiesViewParserRuleCall_2; }

		//Action
		public RuleCall getActionParserRuleCall_3() { return cActionParserRuleCall_3; }
	}

	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Action");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEclipseActionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEEFActionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Action returns mbot::Action:
		//	EclipseAction | EEFAction;
		public ParserRule getRule() { return rule; }

		//EclipseAction | EEFAction
		public Alternatives getAlternatives() { return cAlternatives; }

		//EclipseAction
		public RuleCall getEclipseActionParserRuleCall_0() { return cEclipseActionParserRuleCall_0; }

		//EEFAction
		public RuleCall getEEFActionParserRuleCall_1() { return cEEFActionParserRuleCall_1; }
	}

	public class EclipseActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EclipseAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCreateProjectParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCreateModelParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSaveParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRemoveProjectParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//EclipseAction returns EclipseActions::EclipseAction:
		//	CreateProject | CreateModel | Save | RemoveProject;
		public ParserRule getRule() { return rule; }

		//CreateProject | CreateModel | Save | RemoveProject
		public Alternatives getAlternatives() { return cAlternatives; }

		//CreateProject
		public RuleCall getCreateProjectParserRuleCall_0() { return cCreateProjectParserRuleCall_0; }

		//CreateModel
		public RuleCall getCreateModelParserRuleCall_1() { return cCreateModelParserRuleCall_1; }

		//Save
		public RuleCall getSaveParserRuleCall_2() { return cSaveParserRuleCall_2; }

		//RemoveProject
		public RuleCall getRemoveProjectParserRuleCall_3() { return cRemoveProjectParserRuleCall_3; }
	}

	public class CreateProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CreateProject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCreateProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cProjectNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cProjectNameEStringParserRuleCall_1_0 = (RuleCall)cProjectNameAssignment_1.eContents().get(0);
		
		//CreateProject returns EclipseActions::CreateProject:
		//	"createProject" projectName=EString;
		public ParserRule getRule() { return rule; }

		//"createProject" projectName=EString
		public Group getGroup() { return cGroup; }

		//"createProject"
		public Keyword getCreateProjectKeyword_0() { return cCreateProjectKeyword_0; }

		//projectName=EString
		public Assignment getProjectNameAssignment_1() { return cProjectNameAssignment_1; }

		//EString
		public RuleCall getProjectNameEStringParserRuleCall_1_0() { return cProjectNameEStringParserRuleCall_1_0; }
	}

	public class RemoveProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RemoveProject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeleteProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cProjectNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cProjectNameEStringParserRuleCall_1_0 = (RuleCall)cProjectNameAssignment_1.eContents().get(0);
		
		//RemoveProject returns EclipseActions::RemoveProject:
		//	"deleteProject" projectName=EString;
		public ParserRule getRule() { return rule; }

		//"deleteProject" projectName=EString
		public Group getGroup() { return cGroup; }

		//"deleteProject"
		public Keyword getDeleteProjectKeyword_0() { return cDeleteProjectKeyword_0; }

		//projectName=EString
		public Assignment getProjectNameAssignment_1() { return cProjectNameAssignment_1; }

		//EString
		public RuleCall getProjectNameEStringParserRuleCall_1_0() { return cProjectNameEStringParserRuleCall_1_0; }
	}

	public class ReferenceableObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceableObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCreateModelParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAddParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ReferenceableObject returns EEFExtended::ReferenceableObject:
		//	CreateModel | Add;
		public ParserRule getRule() { return rule; }

		//CreateModel | Add
		public Alternatives getAlternatives() { return cAlternatives; }

		//CreateModel
		public RuleCall getCreateModelParserRuleCall_0() { return cCreateModelParserRuleCall_0; }

		//Add
		public RuleCall getAddParserRuleCall_1() { return cAddParserRuleCall_1; }
	}

	public class CreateModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CreateModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCreateObjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReferenceNameIDTerminalRuleCall_1_0 = (RuleCall)cReferenceNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRootURIAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRootURIEStringParserRuleCall_3_0 = (RuleCall)cRootURIAssignment_3.eContents().get(0);
		private final Keyword cInResourceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cModelNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cModelNameEStringParserRuleCall_5_0 = (RuleCall)cModelNameAssignment_5.eContents().get(0);
		private final Keyword cAtKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPathEStringParserRuleCall_7_0 = (RuleCall)cPathAssignment_7.eContents().get(0);
		
		//CreateModel returns EclipseActions::CreateModel:
		//	"createObject" referenceName=ID ":" rootURI=EString "inResource" modelName=EString "at" path=EString;
		public ParserRule getRule() { return rule; }

		//"createObject" referenceName=ID ":" rootURI=EString "inResource" modelName=EString "at" path=EString
		public Group getGroup() { return cGroup; }

		//"createObject"
		public Keyword getCreateObjectKeyword_0() { return cCreateObjectKeyword_0; }

		//referenceName=ID
		public Assignment getReferenceNameAssignment_1() { return cReferenceNameAssignment_1; }

		//ID
		public RuleCall getReferenceNameIDTerminalRuleCall_1_0() { return cReferenceNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//rootURI=EString
		public Assignment getRootURIAssignment_3() { return cRootURIAssignment_3; }

		//EString
		public RuleCall getRootURIEStringParserRuleCall_3_0() { return cRootURIEStringParserRuleCall_3_0; }

		//"inResource"
		public Keyword getInResourceKeyword_4() { return cInResourceKeyword_4; }

		//modelName=EString
		public Assignment getModelNameAssignment_5() { return cModelNameAssignment_5; }

		//EString
		public RuleCall getModelNameEStringParserRuleCall_5_0() { return cModelNameEStringParserRuleCall_5_0; }

		//"at"
		public Keyword getAtKeyword_6() { return cAtKeyword_6; }

		//path=EString
		public Assignment getPathAssignment_7() { return cPathAssignment_7; }

		//EString
		public RuleCall getPathEStringParserRuleCall_7_0() { return cPathEStringParserRuleCall_7_0; }
	}

	public class SaveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Save");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSaveKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cSaveAction_1 = (Action)cGroup.eContents().get(1);
		
		//Save returns EclipseActions::Save:
		//	"save" {EclipseActions::Save};
		public ParserRule getRule() { return rule; }

		//"save" {EclipseActions::Save}
		public Group getGroup() { return cGroup; }

		//"save"
		public Keyword getSaveKeyword_0() { return cSaveKeyword_0; }

		//{EclipseActions::Save}
		public Action getSaveAction_1() { return cSaveAction_1; }
	}

	public class EEFActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EEFAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCheckParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAddParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSetAttributeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//EEFAction returns EEFActions::EEFAction:
		//	Check | Add | SetAttribute;
		public ParserRule getRule() { return rule; }

		//Check | Add | SetAttribute
		public Alternatives getAlternatives() { return cAlternatives; }

		//Check
		public RuleCall getCheckParserRuleCall_0() { return cCheckParserRuleCall_0; }

		//Add
		public RuleCall getAddParserRuleCall_1() { return cAddParserRuleCall_1; }

		//SetAttribute
		public RuleCall getSetAttributeParserRuleCall_2() { return cSetAttributeParserRuleCall_2; }
	}

	public class CheckElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Check");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCheckKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cCheckAction_1 = (Action)cGroup.eContents().get(1);
		
		//Check returns EEFActions::Check:
		//	"check!" {EEFActions::Check};
		public ParserRule getRule() { return rule; }

		//"check!" {EEFActions::Check}
		public Group getGroup() { return cGroup; }

		//"check!"
		public Keyword getCheckKeyword_0() { return cCheckKeyword_0; }

		//{EEFActions::Check}
		public Action getCheckAction_1() { return cCheckAction_1; }
	}

	public class AddElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Add");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCreateObjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReferenceNameIDTerminalRuleCall_1_0 = (RuleCall)cReferenceNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeURIAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeURIEStringParserRuleCall_3_0 = (RuleCall)cTypeURIAssignment_3.eContents().get(0);
		private final Keyword cInElementKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cReferenceableObjectAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cReferenceableObjectReferenceableObjectCrossReference_5_0 = (CrossReference)cReferenceableObjectAssignment_5.eContents().get(0);
		private final RuleCall cReferenceableObjectReferenceableObjectIDTerminalRuleCall_5_0_1 = (RuleCall)cReferenceableObjectReferenceableObjectCrossReference_5_0.eContents().get(1);
		private final Keyword cInFeatureKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cEContainingFeatureURIAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cEContainingFeatureURIEStringParserRuleCall_7_0 = (RuleCall)cEContainingFeatureURIAssignment_7.eContents().get(0);
		
		//Add returns EEFActions::Add:
		//	"createObject" referenceName=ID ":" typeURI=EString "inElement" referenceableObject=[EEFExtended::ReferenceableObject]
		//	"inFeature" eContainingFeatureURI=EString;
		public ParserRule getRule() { return rule; }

		//"createObject" referenceName=ID ":" typeURI=EString "inElement" referenceableObject=[EEFExtended::ReferenceableObject]
		//"inFeature" eContainingFeatureURI=EString
		public Group getGroup() { return cGroup; }

		//"createObject"
		public Keyword getCreateObjectKeyword_0() { return cCreateObjectKeyword_0; }

		//referenceName=ID
		public Assignment getReferenceNameAssignment_1() { return cReferenceNameAssignment_1; }

		//ID
		public RuleCall getReferenceNameIDTerminalRuleCall_1_0() { return cReferenceNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//typeURI=EString
		public Assignment getTypeURIAssignment_3() { return cTypeURIAssignment_3; }

		//EString
		public RuleCall getTypeURIEStringParserRuleCall_3_0() { return cTypeURIEStringParserRuleCall_3_0; }

		//"inElement"
		public Keyword getInElementKeyword_4() { return cInElementKeyword_4; }

		//referenceableObject=[EEFExtended::ReferenceableObject]
		public Assignment getReferenceableObjectAssignment_5() { return cReferenceableObjectAssignment_5; }

		//[EEFExtended::ReferenceableObject]
		public CrossReference getReferenceableObjectReferenceableObjectCrossReference_5_0() { return cReferenceableObjectReferenceableObjectCrossReference_5_0; }

		//ID
		public RuleCall getReferenceableObjectReferenceableObjectIDTerminalRuleCall_5_0_1() { return cReferenceableObjectReferenceableObjectIDTerminalRuleCall_5_0_1; }

		//"inFeature"
		public Keyword getInFeatureKeyword_6() { return cInFeatureKeyword_6; }

		//eContainingFeatureURI=EString
		public Assignment getEContainingFeatureURIAssignment_7() { return cEContainingFeatureURIAssignment_7; }

		//EString
		public RuleCall getEContainingFeatureURIEStringParserRuleCall_7_0() { return cEContainingFeatureURIEStringParserRuleCall_7_0; }
	}

	public class SetAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SetAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceableObjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferenceableObjectReferenceableObjectCrossReference_1_0 = (CrossReference)cReferenceableObjectAssignment_1.eContents().get(0);
		private final RuleCall cReferenceableObjectReferenceableObjectIDTerminalRuleCall_1_0_1 = (RuleCall)cReferenceableObjectReferenceableObjectCrossReference_1_0.eContents().get(1);
		private final Keyword cValuesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValuesEStringParserRuleCall_3_0 = (RuleCall)cValuesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValuesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_4_1_0 = (RuleCall)cValuesAssignment_4_1.eContents().get(0);
		private final Keyword cInFeatureKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cEContainingFeatureURIAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEContainingFeatureURIEStringParserRuleCall_6_0 = (RuleCall)cEContainingFeatureURIAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cUsingWidgetKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPropertiesEditionElementURIAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPropertiesEditionElementURIEStringParserRuleCall_7_1_0 = (RuleCall)cPropertiesEditionElementURIAssignment_7_1.eContents().get(0);
		
		//SetAttribute returns EEFActions::SetAttribute:
		//	"set" referenceableObject=[EEFExtended::ReferenceableObject] "values" values+=EString ("," values+=EString)*
		//	"inFeature" eContainingFeatureURI=EString ("usingWidget" propertiesEditionElementURI=EString)?;
		public ParserRule getRule() { return rule; }

		//"set" referenceableObject=[EEFExtended::ReferenceableObject] "values" values+=EString ("," values+=EString)* "inFeature"
		//eContainingFeatureURI=EString ("usingWidget" propertiesEditionElementURI=EString)?
		public Group getGroup() { return cGroup; }

		//"set"
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }

		//referenceableObject=[EEFExtended::ReferenceableObject]
		public Assignment getReferenceableObjectAssignment_1() { return cReferenceableObjectAssignment_1; }

		//[EEFExtended::ReferenceableObject]
		public CrossReference getReferenceableObjectReferenceableObjectCrossReference_1_0() { return cReferenceableObjectReferenceableObjectCrossReference_1_0; }

		//ID
		public RuleCall getReferenceableObjectReferenceableObjectIDTerminalRuleCall_1_0_1() { return cReferenceableObjectReferenceableObjectIDTerminalRuleCall_1_0_1; }

		//"values"
		public Keyword getValuesKeyword_2() { return cValuesKeyword_2; }

		//values+=EString
		public Assignment getValuesAssignment_3() { return cValuesAssignment_3; }

		//EString
		public RuleCall getValuesEStringParserRuleCall_3_0() { return cValuesEStringParserRuleCall_3_0; }

		//("," values+=EString)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//values+=EString
		public Assignment getValuesAssignment_4_1() { return cValuesAssignment_4_1; }

		//EString
		public RuleCall getValuesEStringParserRuleCall_4_1_0() { return cValuesEStringParserRuleCall_4_1_0; }

		//"inFeature"
		public Keyword getInFeatureKeyword_5() { return cInFeatureKeyword_5; }

		//eContainingFeatureURI=EString
		public Assignment getEContainingFeatureURIAssignment_6() { return cEContainingFeatureURIAssignment_6; }

		//EString
		public RuleCall getEContainingFeatureURIEStringParserRuleCall_6_0() { return cEContainingFeatureURIEStringParserRuleCall_6_0; }

		//("usingWidget" propertiesEditionElementURI=EString)?
		public Group getGroup_7() { return cGroup_7; }

		//"usingWidget"
		public Keyword getUsingWidgetKeyword_7_0() { return cUsingWidgetKeyword_7_0; }

		//propertiesEditionElementURI=EString
		public Assignment getPropertiesEditionElementURIAssignment_7_1() { return cPropertiesEditionElementURIAssignment_7_1; }

		//EString
		public RuleCall getPropertiesEditionElementURIEStringParserRuleCall_7_1_0() { return cPropertiesEditionElementURIEStringParserRuleCall_7_1_0; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private ScenarioElements pScenario;
	private ProcessingsElements pProcessings;
	private PropertiesViewElements pPropertiesView;
	private WizardElements pWizard;
	private DetailsElements pDetails;
	private SubProcessingsElements pSubProcessings;
	private ActionElements pAction;
	private EclipseActionElements pEclipseAction;
	private CreateProjectElements pCreateProject;
	private RemoveProjectElements pRemoveProject;
	private ReferenceableObjectElements pReferenceableObject;
	private CreateModelElements pCreateModel;
	private SaveElements pSave;
	private EEFActionElements pEEFAction;
	private CheckElements pCheck;
	private AddElements pAdd;
	private SetAttributeElements pSetAttribute;
	private EStringElements pEString;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ModelingBotGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.eclipse.emf.eef.ModelingBot".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Scenario returns mbot::Scenario:
	//	"scenario" name=EString "{" processings+=Processings* "}";
	public ScenarioElements getScenarioAccess() {
		return (pScenario != null) ? pScenario : (pScenario = new ScenarioElements());
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}

	//Processings returns mbot::Processing:
	//	Details | Wizard | PropertiesView | Action;
	public ProcessingsElements getProcessingsAccess() {
		return (pProcessings != null) ? pProcessings : (pProcessings = new ProcessingsElements());
	}
	
	public ParserRule getProcessingsRule() {
		return getProcessingsAccess().getRule();
	}

	//PropertiesView returns mbot::PropertiesView:
	//	"propertiesView" name=EString? "{" processings+=SubProcessings* "}";
	public PropertiesViewElements getPropertiesViewAccess() {
		return (pPropertiesView != null) ? pPropertiesView : (pPropertiesView = new PropertiesViewElements());
	}
	
	public ParserRule getPropertiesViewRule() {
		return getPropertiesViewAccess().getRule();
	}

	//Wizard returns mbot::Wizard:
	//	"wizard" name=EString? "{" processings+=SubProcessings* "}";
	public WizardElements getWizardAccess() {
		return (pWizard != null) ? pWizard : (pWizard = new WizardElements());
	}
	
	public ParserRule getWizardRule() {
		return getWizardAccess().getRule();
	}

	//Details returns mbot::DetailsPage:
	//	"detailsPage" name=EString? "{" processings+=SubProcessings* "}";
	public DetailsElements getDetailsAccess() {
		return (pDetails != null) ? pDetails : (pDetails = new DetailsElements());
	}
	
	public ParserRule getDetailsRule() {
		return getDetailsAccess().getRule();
	}

	//SubProcessings returns mbot::Processing:
	//	Wizard | Details | PropertiesView | Action;
	public SubProcessingsElements getSubProcessingsAccess() {
		return (pSubProcessings != null) ? pSubProcessings : (pSubProcessings = new SubProcessingsElements());
	}
	
	public ParserRule getSubProcessingsRule() {
		return getSubProcessingsAccess().getRule();
	}

	//Action returns mbot::Action:
	//	EclipseAction | EEFAction;
	public ActionElements getActionAccess() {
		return (pAction != null) ? pAction : (pAction = new ActionElements());
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}

	//EclipseAction returns EclipseActions::EclipseAction:
	//	CreateProject | CreateModel | Save | RemoveProject;
	public EclipseActionElements getEclipseActionAccess() {
		return (pEclipseAction != null) ? pEclipseAction : (pEclipseAction = new EclipseActionElements());
	}
	
	public ParserRule getEclipseActionRule() {
		return getEclipseActionAccess().getRule();
	}

	//CreateProject returns EclipseActions::CreateProject:
	//	"createProject" projectName=EString;
	public CreateProjectElements getCreateProjectAccess() {
		return (pCreateProject != null) ? pCreateProject : (pCreateProject = new CreateProjectElements());
	}
	
	public ParserRule getCreateProjectRule() {
		return getCreateProjectAccess().getRule();
	}

	//RemoveProject returns EclipseActions::RemoveProject:
	//	"deleteProject" projectName=EString;
	public RemoveProjectElements getRemoveProjectAccess() {
		return (pRemoveProject != null) ? pRemoveProject : (pRemoveProject = new RemoveProjectElements());
	}
	
	public ParserRule getRemoveProjectRule() {
		return getRemoveProjectAccess().getRule();
	}

	//ReferenceableObject returns EEFExtended::ReferenceableObject:
	//	CreateModel | Add;
	public ReferenceableObjectElements getReferenceableObjectAccess() {
		return (pReferenceableObject != null) ? pReferenceableObject : (pReferenceableObject = new ReferenceableObjectElements());
	}
	
	public ParserRule getReferenceableObjectRule() {
		return getReferenceableObjectAccess().getRule();
	}

	//CreateModel returns EclipseActions::CreateModel:
	//	"createObject" referenceName=ID ":" rootURI=EString "inResource" modelName=EString "at" path=EString;
	public CreateModelElements getCreateModelAccess() {
		return (pCreateModel != null) ? pCreateModel : (pCreateModel = new CreateModelElements());
	}
	
	public ParserRule getCreateModelRule() {
		return getCreateModelAccess().getRule();
	}

	//Save returns EclipseActions::Save:
	//	"save" {EclipseActions::Save};
	public SaveElements getSaveAccess() {
		return (pSave != null) ? pSave : (pSave = new SaveElements());
	}
	
	public ParserRule getSaveRule() {
		return getSaveAccess().getRule();
	}

	//EEFAction returns EEFActions::EEFAction:
	//	Check | Add | SetAttribute;
	public EEFActionElements getEEFActionAccess() {
		return (pEEFAction != null) ? pEEFAction : (pEEFAction = new EEFActionElements());
	}
	
	public ParserRule getEEFActionRule() {
		return getEEFActionAccess().getRule();
	}

	//Check returns EEFActions::Check:
	//	"check!" {EEFActions::Check};
	public CheckElements getCheckAccess() {
		return (pCheck != null) ? pCheck : (pCheck = new CheckElements());
	}
	
	public ParserRule getCheckRule() {
		return getCheckAccess().getRule();
	}

	//Add returns EEFActions::Add:
	//	"createObject" referenceName=ID ":" typeURI=EString "inElement" referenceableObject=[EEFExtended::ReferenceableObject]
	//	"inFeature" eContainingFeatureURI=EString;
	public AddElements getAddAccess() {
		return (pAdd != null) ? pAdd : (pAdd = new AddElements());
	}
	
	public ParserRule getAddRule() {
		return getAddAccess().getRule();
	}

	//SetAttribute returns EEFActions::SetAttribute:
	//	"set" referenceableObject=[EEFExtended::ReferenceableObject] "values" values+=EString ("," values+=EString)*
	//	"inFeature" eContainingFeatureURI=EString ("usingWidget" propertiesEditionElementURI=EString)?;
	public SetAttributeElements getSetAttributeAccess() {
		return (pSetAttribute != null) ? pSetAttribute : (pSetAttribute = new SetAttributeElements());
	}
	
	public ParserRule getSetAttributeRule() {
		return getSetAttributeAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
