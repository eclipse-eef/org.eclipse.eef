/*
* generated by Xtext
*/
grammar InternalModelingBot;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.emf.eef.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.emf.eef.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.emf.eef.services.ModelingBotGrammarAccess;

}

@parser::members {

 	private ModelingBotGrammarAccess grammarAccess;
 	
    public InternalModelingBotParser(TokenStream input, ModelingBotGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Scenario";	
   	}
   	
   	@Override
   	protected ModelingBotGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	 iv_ruleScenario=ruleScenario 
	 { $current=$iv_ruleScenario.current; } 
	 EOF 
;

// Rule Scenario
ruleScenario returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='scenario' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScenarioAccess().getScenarioKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioAccess().getProcessingsProcessingsParserRuleCall_3_0()); 
	    }
		lv_processings_3_0=ruleProcessings		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioRule());
	        }
       		add(
       			$current, 
       			"processings",
        		lv_processings_3_0, 
        		"Processings");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleProcessings
entryRuleProcessings returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessingsRule()); }
	 iv_ruleProcessings=ruleProcessings 
	 { $current=$iv_ruleProcessings.current; } 
	 EOF 
;

// Rule Processings
ruleProcessings returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getProcessingsAccess().getDetailsParserRuleCall_0()); 
    }
    this_Details_0=ruleDetails
    { 
        $current = $this_Details_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getProcessingsAccess().getWizardParserRuleCall_1()); 
    }
    this_Wizard_1=ruleWizard
    { 
        $current = $this_Wizard_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getProcessingsAccess().getPropertiesViewParserRuleCall_2()); 
    }
    this_PropertiesView_2=rulePropertiesView
    { 
        $current = $this_PropertiesView_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getProcessingsAccess().getActionParserRuleCall_3()); 
    }
    this_Action_3=ruleAction
    { 
        $current = $this_Action_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePropertiesView
entryRulePropertiesView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertiesViewRule()); }
	 iv_rulePropertiesView=rulePropertiesView 
	 { $current=$iv_rulePropertiesView.current; } 
	 EOF 
;

// Rule PropertiesView
rulePropertiesView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='propertiesView' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropertiesViewAccess().getPropertiesViewKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertiesViewAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertiesViewRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPropertiesViewAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertiesViewAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); 
	    }
		lv_processings_3_0=ruleSubProcessings		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertiesViewRule());
	        }
       		add(
       			$current, 
       			"processings",
        		lv_processings_3_0, 
        		"SubProcessings");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPropertiesViewAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleWizard
entryRuleWizard returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWizardRule()); }
	 iv_ruleWizard=ruleWizard 
	 { $current=$iv_ruleWizard.current; } 
	 EOF 
;

// Rule Wizard
ruleWizard returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='wizard' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWizardAccess().getWizardKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWizardAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWizardRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWizardAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWizardAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); 
	    }
		lv_processings_3_0=ruleSubProcessings		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWizardRule());
	        }
       		add(
       			$current, 
       			"processings",
        		lv_processings_3_0, 
        		"SubProcessings");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWizardAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDetails
entryRuleDetails returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDetailsRule()); }
	 iv_ruleDetails=ruleDetails 
	 { $current=$iv_ruleDetails.current; } 
	 EOF 
;

// Rule Details
ruleDetails returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='detailsPage' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDetailsAccess().getDetailsPageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDetailsAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDetailsRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDetailsAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDetailsAccess().getProcessingsSubProcessingsParserRuleCall_3_0()); 
	    }
		lv_processings_3_0=ruleSubProcessings		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDetailsRule());
	        }
       		add(
       			$current, 
       			"processings",
        		lv_processings_3_0, 
        		"SubProcessings");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDetailsAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSubProcessings
entryRuleSubProcessings returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubProcessingsRule()); }
	 iv_ruleSubProcessings=ruleSubProcessings 
	 { $current=$iv_ruleSubProcessings.current; } 
	 EOF 
;

// Rule SubProcessings
ruleSubProcessings returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubProcessingsAccess().getWizardParserRuleCall_0()); 
    }
    this_Wizard_0=ruleWizard
    { 
        $current = $this_Wizard_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubProcessingsAccess().getDetailsParserRuleCall_1()); 
    }
    this_Details_1=ruleDetails
    { 
        $current = $this_Details_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubProcessingsAccess().getPropertiesViewParserRuleCall_2()); 
    }
    this_PropertiesView_2=rulePropertiesView
    { 
        $current = $this_PropertiesView_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubProcessingsAccess().getActionParserRuleCall_3()); 
    }
    this_Action_3=ruleAction
    { 
        $current = $this_Action_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getActionAccess().getEclipseActionParserRuleCall_0()); 
    }
    this_EclipseAction_0=ruleEclipseAction
    { 
        $current = $this_EclipseAction_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActionAccess().getEEFActionParserRuleCall_1()); 
    }
    this_EEFAction_1=ruleEEFAction
    { 
        $current = $this_EEFAction_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEclipseAction
entryRuleEclipseAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEclipseActionRule()); }
	 iv_ruleEclipseAction=ruleEclipseAction 
	 { $current=$iv_ruleEclipseAction.current; } 
	 EOF 
;

// Rule EclipseAction
ruleEclipseAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEclipseActionAccess().getCreateProjectParserRuleCall_0()); 
    }
    this_CreateProject_0=ruleCreateProject
    { 
        $current = $this_CreateProject_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEclipseActionAccess().getCreateModelParserRuleCall_1()); 
    }
    this_CreateModel_1=ruleCreateModel
    { 
        $current = $this_CreateModel_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEclipseActionAccess().getSaveParserRuleCall_2()); 
    }
    this_Save_2=ruleSave
    { 
        $current = $this_Save_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEclipseActionAccess().getRemoveProjectParserRuleCall_3()); 
    }
    this_RemoveProject_3=ruleRemoveProject
    { 
        $current = $this_RemoveProject_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCreateProject
entryRuleCreateProject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCreateProjectRule()); }
	 iv_ruleCreateProject=ruleCreateProject 
	 { $current=$iv_ruleCreateProject.current; } 
	 EOF 
;

// Rule CreateProject
ruleCreateProject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='create' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCreateProjectAccess().getCreateKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateProjectAccess().getProjectNameEStringParserRuleCall_1_0()); 
	    }
		lv_projectName_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateProjectRule());
	        }
       		set(
       			$current, 
       			"projectName",
        		lv_projectName_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRemoveProject
entryRuleRemoveProject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveProjectRule()); }
	 iv_ruleRemoveProject=ruleRemoveProject 
	 { $current=$iv_ruleRemoveProject.current; } 
	 EOF 
;

// Rule RemoveProject
ruleRemoveProject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delete' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRemoveProjectAccess().getDeleteKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoveProjectAccess().getProjectNameEStringParserRuleCall_1_0()); 
	    }
		lv_projectName_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoveProjectRule());
	        }
       		set(
       			$current, 
       			"projectName",
        		lv_projectName_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleCreateModel
entryRuleCreateModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCreateModelRule()); }
	 iv_ruleCreateModel=ruleCreateModel 
	 { $current=$iv_ruleCreateModel.current; } 
	 EOF 
;

// Rule CreateModel
ruleCreateModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='create' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCreateModelAccess().getCreateKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateModelAccess().getModelNameEStringParserRuleCall_1_0()); 
	    }
		lv_modelName_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateModelRule());
	        }
       		set(
       			$current, 
       			"modelName",
        		lv_modelName_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='in' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCreateModelAccess().getInKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateModelAccess().getPathEStringParserRuleCall_3_0()); 
	    }
		lv_path_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateModelRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='root' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCreateModelAccess().getRootKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateModelAccess().getRootURIEStringParserRuleCall_5_0()); 
	    }
		lv_rootURI_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateModelRule());
	        }
       		set(
       			$current, 
       			"rootURI",
        		lv_rootURI_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='as' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCreateModelAccess().getAsKeyword_6());
    }
(
(
		lv_referenceName_7_0=RULE_ID
		{
			newLeafNode(lv_referenceName_7_0, grammarAccess.getCreateModelAccess().getReferenceNameIDTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"referenceName",
        		lv_referenceName_7_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleSave
entryRuleSave returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSaveRule()); }
	 iv_ruleSave=ruleSave 
	 { $current=$iv_ruleSave.current; } 
	 EOF 
;

// Rule Save
ruleSave returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='save' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSaveAccess().getSaveKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getSaveAccess().getSaveAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleEEFAction
entryRuleEEFAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEEFActionRule()); }
	 iv_ruleEEFAction=ruleEEFAction 
	 { $current=$iv_ruleEEFAction.current; } 
	 EOF 
;

// Rule EEFAction
ruleEEFAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEEFActionAccess().getCheckParserRuleCall_0()); 
    }
    this_Check_0=ruleCheck
    { 
        $current = $this_Check_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEEFActionAccess().getAddParserRuleCall_1()); 
    }
    this_Add_1=ruleAdd
    { 
        $current = $this_Add_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEEFActionAccess().getSetAttributeParserRuleCall_2()); 
    }
    this_SetAttribute_2=ruleSetAttribute
    { 
        $current = $this_SetAttribute_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCheck
entryRuleCheck returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCheckRule()); }
	 iv_ruleCheck=ruleCheck 
	 { $current=$iv_ruleCheck.current; } 
	 EOF 
;

// Rule Check
ruleCheck returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='check' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCheckAccess().getCheckKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getCheckAccess().getCheckAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	 iv_ruleAdd=ruleAdd 
	 { $current=$iv_ruleAdd.current; } 
	 EOF 
;

// Rule Add
ruleAdd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='new' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddAccess().getNewKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAddAccess().getTypeURIEStringParserRuleCall_1_0()); 
	    }
		lv_typeURI_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddRule());
	        }
       		set(
       			$current, 
       			"typeURI",
        		lv_typeURI_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='in' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAddAccess().getInKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getAddAccess().getReferenceableObjectReferenceableObjectCrossReference_3_0()); 
	}

)
)	otherlv_4='feature' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAddAccess().getFeatureKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAddAccess().getEContainingFeatureURIEStringParserRuleCall_5_0()); 
	    }
		lv_eContainingFeatureURI_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddRule());
	        }
       		set(
       			$current, 
       			"eContainingFeatureURI",
        		lv_eContainingFeatureURI_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='as' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAddAccess().getAsKeyword_6());
    }
(
(
		lv_referenceName_7_0=RULE_ID
		{
			newLeafNode(lv_referenceName_7_0, grammarAccess.getAddAccess().getReferenceNameIDTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"referenceName",
        		lv_referenceName_7_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleSetAttribute
entryRuleSetAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetAttributeRule()); }
	 iv_ruleSetAttribute=ruleSetAttribute 
	 { $current=$iv_ruleSetAttribute.current; } 
	 EOF 
;

// Rule SetAttribute
ruleSetAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSetAttributeAccess().getSetKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetAttributeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSetAttributeAccess().getReferenceableObjectReferenceableObjectCrossReference_1_0()); 
	}

)
)	otherlv_2='feature' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSetAttributeAccess().getFeatureKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetAttributeAccess().getEContainingFeatureURIEStringParserRuleCall_3_0()); 
	    }
		lv_eContainingFeatureURI_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetAttributeRule());
	        }
       		set(
       			$current, 
       			"eContainingFeatureURI",
        		lv_eContainingFeatureURI_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='via' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSetAttributeAccess().getViaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetAttributeAccess().getPropertiesEditionElementURIEStringParserRuleCall_4_1_0()); 
	    }
		lv_propertiesEditionElementURI_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetAttributeRule());
	        }
       		set(
       			$current, 
       			"propertiesEditionElementURI",
        		lv_propertiesEditionElementURI_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='values' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSetAttributeAccess().getValuesKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetAttributeAccess().getValuesEStringParserRuleCall_6_0()); 
	    }
		lv_values_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetAttributeRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSetAttributeAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetAttributeAccess().getValuesEStringParserRuleCall_7_1_0()); 
	    }
		lv_values_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetAttributeRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


